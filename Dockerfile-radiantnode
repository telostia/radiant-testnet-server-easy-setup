# The Radiant Blockchain Developers
# The purpose of this image is to be able to host Radiant Node (RADN) and electrumx
# Build with: `docker build .`
# Public images at: https://hub.docker.com/repository/docker/radiantblockchain

# edited by Blademaster for easy scripting

FROM ubuntu:20.04

LABEL maintainer="blademaster"
LABEL version="1.0.0"
LABEL description="Docker image for radiantd node"

ARG DEBIAN_FRONTEND=nointeractive
# RUN apt update
# RUN apt-get install -y curl
# RUN curl -sL https://deb.nodesource.com/setup_18.x | bash -
# RUN apt-get install -y nodejs

ENV PACKAGES="\
  build-essential \
  libcurl4-openssl-dev \
  software-properties-common \
  ubuntu-drivers-common \
  pkg-config \
  libtool \
  openssh-server \
  git \
  clinfo \
  autoconf \
  automake \
  libjansson-dev \
  libevent-dev \
  uthash-dev \
  nodejs \
  vim \
  libboost-chrono-dev \
  libboost-filesystem-dev \
  libboost-test-dev \
  libboost-thread-dev \
  libevent-dev \
  libminiupnpc-dev \
  libssl-dev \
  libzmq3-dev \ 
  help2man \
  ninja-build \
  python3 \
  libdb++-dev \
  wget \
  cmake \
  ocl-icd-* \
  opencl-headers \
  ocl-icd-opencl-dev\
"
# Note can remove the opencl and ocl packages above when not building on a system for GPU/mining
# Included only for reference purposes if this container would be used for mining as well.

# RUN apt update && apt install --no-install-recommends -y $PACKAGES  && \
#     rm -rf /var/lib/apt/lists/* && \
#     apt clean

# Install radiant-node
WORKDIR /root

RUN apt update \ 
   && apt install --no-install-recommends -y $PACKAGES  \
   && rm -rf /var/lib/apt/lists/* \
   && git clone --depth 1 --branch v1.3.0 https://github.com/RadiantBlockchain-Community/radiant-node.git \
   && cmake -GNinja radiant-node -DBUILD_RADIANT_QT=OFF -DENABLE_UPNP=OFF -DENABLE_MAN=OFF -DBUILD_RADIANT_SEEDER=OFF -DBUILD_BITCOIN_ZMQ=ON \
   && ninja \
   && ninja install
 
# RUN git clone --depth 1 --branch v1.3.0 https://github.com/RadiantBlockchain-Community/radiant-node.git
# RUN mkdir /root/radiant-node/build
# WORKDIR /root/radiant-node/build
# RUN cmake -GNinja .. -DBUILD_RADIANT_QT=OFF
# RUN ninja
# RUN ninja install

# WORKDIR /root/radiant-node/build/src

COPY radiantnode.sh /radiantnode.sh
RUN chmod 755 /radiantnode.sh

RUN mkdir /root/.radiant
RUN chmod 755 /root/.radiant/

ARG rpcuser
ARG rpcpassword

# RUN EXTIP=`curl -s4 icanhazip.com` && \
#     echo -e "${GREEN}Preparing config file ${NONE}" && \
#     printf "current IP=$EXTIP\nrpcuser=radiant${rpcuser}\nrpcpassword=${rpcpassword}\n" 


EXPOSE 17333

# ENTRYPOINT radiantd -rpcworkqueue=32 -rpcthreads=16 -rest -server -rpcallowip=0.0.0.0/0 -txindex=1 -rpcbind=127.0.0.1 -rpcbind=radiant-node -rpcuser=radiant${rpcuser} -rpcpassword=${rpcpassword}

ENTRYPOINT ["/bin/sh", "-c" , "/radiantnode.sh"]
 
